[{"E:\\spikewell\\Cerner Projects\\kgridui\\src\\index.js":"1","E:\\spikewell\\Cerner Projects\\kgridui\\src\\App.js":"2","E:\\spikewell\\Cerner Projects\\kgridui\\src\\serviceWorker.js":"3","E:\\spikewell\\Cerner Projects\\kgridui\\src\\Hypothermia\\HypothermiaCalc.js":"4","E:\\spikewell\\Cerner Projects\\kgridui\\src\\Hypothermia\\SarnatForm.js":"5","E:\\spikewell\\Cerner Projects\\kgridui\\src\\Sepsis\\SepsisCalc.js":"6","E:\\spikewell\\Cerner Projects\\kgridui\\src\\Feeding\\FeedingCalc.js":"7","E:\\spikewell\\Cerner Projects\\kgridui\\src\\Feeding\\FeedingNew.js":"8","E:\\spikewell\\Cerner Projects\\kgridui\\src\\CSCE\\CSCECalc.js":"9","E:\\spikewell\\Cerner Projects\\kgridui\\src\\Layouts\\DefaultLayout.js":"10","E:\\spikewell\\Cerner Projects\\kgridui\\src\\Landingpage.jsx":"11","E:\\spikewell\\Cerner Projects\\kgridui\\src\\Hypothermia\\CallAPIBaseline.js":"12","E:\\spikewell\\Cerner Projects\\kgridui\\src\\Hypothermia\\CallApi.js":"13","E:\\spikewell\\Cerner Projects\\kgridui\\src\\Sepsis\\CallAPISepsis.js":"14","E:\\spikewell\\Cerner Projects\\kgridui\\src\\Feeding\\CallAPIFeeding.js":"15","E:\\spikewell\\Cerner Projects\\kgridui\\src\\Feeding\\CallAPIParenteral.js":"16","E:\\spikewell\\Cerner Projects\\kgridui\\src\\Feeding\\CallAPIFeedingAdv.js":"17","E:\\spikewell\\Cerner Projects\\kgridui\\src\\Layouts\\Backdrop.js":"18","E:\\spikewell\\Cerner Projects\\kgridui\\src\\Layouts\\SideBar.js":"19","E:\\spikewell\\Cerner Projects\\kgridui\\src\\CSCE\\CallAPIDischarge.js":"20","E:\\spikewell\\Cerner Projects\\kgridui\\src\\CSCE\\CallAPIEvent.js":"21"},{"size":464,"mtime":1608045318145,"results":"22","hashOfConfig":"23"},{"size":1478,"mtime":1608090800895,"results":"24","hashOfConfig":"23"},{"size":5226,"mtime":1608045318147,"results":"25","hashOfConfig":"23"},{"size":12117,"mtime":1608045966067,"results":"26","hashOfConfig":"23"},{"size":14825,"mtime":1608045966070,"results":"27","hashOfConfig":"23"},{"size":16098,"mtime":1608045966087,"results":"28","hashOfConfig":"23"},{"size":16530,"mtime":1608045965992,"results":"29","hashOfConfig":"23"},{"size":26360,"mtime":1608091295357,"results":"30","hashOfConfig":"23"},{"size":23809,"mtime":1608045965983,"results":"31","hashOfConfig":"23"},{"size":3276,"mtime":1608045966076,"results":"32","hashOfConfig":"23"},{"size":780,"mtime":1608090435759,"results":"33","hashOfConfig":"23"},{"size":463,"mtime":1608045966063,"results":"34","hashOfConfig":"23"},{"size":438,"mtime":1608045966065,"results":"35","hashOfConfig":"23"},{"size":444,"mtime":1608045966085,"results":"36","hashOfConfig":"23"},{"size":454,"mtime":1608045965987,"results":"37","hashOfConfig":"23"},{"size":451,"mtime":1608045965989,"results":"38","hashOfConfig":"23"},{"size":475,"mtime":1608045965988,"results":"39","hashOfConfig":"23"},{"size":180,"mtime":1608045966074,"results":"40","hashOfConfig":"23"},{"size":1672,"mtime":1608045966082,"results":"41","hashOfConfig":"23"},{"size":456,"mtime":1608045965984,"results":"42","hashOfConfig":"23"},{"size":433,"mtime":1608045965985,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"12uaduj",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"E:\\spikewell\\Cerner Projects\\kgridui\\src\\index.js",[],["91","92"],"E:\\spikewell\\Cerner Projects\\kgridui\\src\\App.js",[],"E:\\spikewell\\Cerner Projects\\kgridui\\src\\serviceWorker.js",[],"E:\\spikewell\\Cerner Projects\\kgridui\\src\\Hypothermia\\HypothermiaCalc.js",["93","94","95","96","97"],"import React, { Component } from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport CallApiBaseline from './CallAPIBaseline'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nclass HypothermiaCalc extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {results:{},\r\n                        location:'1',\r\n                        age:'',\r\n                        weight:'',\r\n                        hours:'',\r\n                        isCB1:false,\r\n                        isCB2:false,\r\n                        isCB3:false,\r\n                        isCB4:false,\r\n                        isCB5:false,\r\n                        RB:'1',\r\n                        counter:0\r\n                    }\r\n        this.getResults=this.getResults.bind(this)             \r\n    }\r\n    locset(event){\r\n        // this.state.location=event.target.value;\r\n        this.setState({location:event.target.value})\r\n    };\r\n    setage(event) {\r\n        this.setState({\r\n          age: event.target.value\r\n        })\r\n    }\r\n    setweight(event) {\r\n        this.setState({\r\n          weight: event.target.value\r\n        })\r\n    }\r\n    sethours(event) {\r\n        this.setState({\r\n          hours: event.target.value\r\n        })\r\n    }\r\n\r\n    setRB(event){\r\n        // this.state.RB=event.target.value;\r\n        this.setState({RB:event.target.value})\r\n    };\r\n\r\n    onChangeCB1 = () => {\r\n        this.setState(initialState => ({\r\n          isCB1: !initialState.isCB1,\r\n        }));\r\n    }\r\n\r\n    onChangeCB3 = () => {\r\n        this.setState(initialState => ({\r\n          isCB3: !initialState.isCB3\r\n        }));\r\n    }\r\n    \r\n    onChangeCB4 = () => {\r\n        this.setState(initialState => ({\r\n          isCB4: !initialState.isCB4\r\n        }));\r\n    }\r\n    \r\n    onChangeCB5 = () => {\r\n        this.setState(initialState => ({\r\n          isCB5: !initialState.isCB5\r\n        }));\r\n    }\r\n    getResults(result){\r\n        this.setState({results:result})\r\n    }\r\n    async getRecommendation()\r\n    {\r\n            CallApiBaseline({\"location\":this.state.location,\r\n            \"age\":this.state.age,\r\n            \"weight\":this.state.weight,\r\n            \"hours\":this.state.hours,\r\n            \"cord_blood_gas\":this.state.isCB1,\r\n            \"cord_blood_gas_high\":this.state.isCB2,\r\n            \"apgar\":this.state.isCB3,\r\n            \"assisted_ventilation\":this.state.isCB4,\r\n            \"acute_perinatal_event_history\":this.state.isCB5\r\n            },this.getResults)\r\n    }\r\n    allowBaseChars(){\r\n        return this.state.age===''||\r\n            this.state.weight===''||\r\n            this.state.hours===''||\r\n            parseFloat(this.state.weight)<=parseFloat('1799.999999') ||\r\n            parseFloat(this.state.age)<=parseFloat('34.999999') ||\r\n            parseFloat(this.state.hours)>=parseFloat('6.000001')            \r\n                \r\n    }\r\n    allowAcute(){\r\n        return this.state.isCB1===false&&\r\n               this.state.isCB2===false&&\r\n               this.state.isCB3===false&&\r\n               this.state.isCB4===false&&\r\n               this.state.isCB5===false\r\n    }\r\n    onNextBaseChars(){     \r\n        this.setState({\r\n            counter:1\r\n        }) \r\n    }\r\n    onNextAcute(){\r\n        this.render()\r\n        this.setState({\r\n            counter:2\r\n        })\r\n        this.getRecommendation();  \r\n    }\r\n    onPrevAcute(){\r\n        this.setState({\r\n            counter:0\r\n        })    \r\n    }\r\n    onPrevResults(){\r\n        this.setState({\r\n            counter:1,\r\n            results:{}\r\n        }) \r\n    }\r\n    render() {\r\n        let recommendations=''\r\n        if(this.state.results.Recommendation)\r\n        {\r\n            let out1 = this.state.results.Recommendation.split(\"\\n\");\r\n            recommendations = out1.map(item=>item);\r\n            for(var v = 0; v <recommendations.length;v++){\r\n                if(recommendations[v] === \"Perform serial target neurologic exam\"){\r\n                    recommendations[v] = <div>&#10003;&nbsp;<a href= \"/Hypothermia/SarnatForm\">{recommendations[v]}</a></div>\r\n                }\r\n                else{\r\n                    recommendations[v] = <div>&#10003;&nbsp;{recommendations[v]}</div>\r\n                }\r\n            }\r\n        }\r\n\r\n        return (  \r\n            <Paper elevation={3} style={{padding:\"10px\",marginRight:\"0.5%\",marginLeft:\"0.5%\"}}> \r\n            <label><h1>Therapeutic Hypothermia Screening</h1></label>\r\n            <hr/>\r\n\r\n            {this.state.counter===0?<Grid>\r\n                <Grid container direction=\"row\" style={{paddingLeft:\"0.5%\"}}> \r\n                    <h2>Baseline Characterstics</h2>\r\n                </Grid>\r\n                <br/>\r\n                <div style={{paddingLeft:\"2%\"}}  value={this.state.location} onChange={(event)=>this.locset(event)}> \r\n                <FormLabel component=\"legend\" style={{color:\"black\",fontWeight:\"bold\"}}>Location</FormLabel>\r\n                    <RadioGroup aria-label=\"location\" name=\"location\" defaultValue={this.state.location}>\r\n                        <FormControlLabel value='0' control={<Radio color=\"primary\"/>} label=\"Birth-Centre\" />\r\n                        <FormControlLabel value='1' control={<Radio color=\"primary\"/>} label=\"CHLA\"/>\r\n                    </RadioGroup>\r\n                </div>\r\n                <br/><br/>\r\n                <Grid container direction=\"column\" style={{paddingLeft:\"2%\"}}> \r\n                    <div>\r\n                        <TextField error={(parseFloat(this.state.age) < 35)?true:false}\r\n                        type=\"number\" label=\"Gestational Age (weeks)\" helperText=\"Please enter week ≥ 35\" variant=\"outlined\"  value={this.state.age} onChange={(event)=>this.setage(event)} />\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        <TextField error={(parseFloat(this.state.weight) < 1800)?true:false}\r\n                        type=\"number\" label=\"Weight (grams)\" helperText=\"Please enter weight ≥ 1800\" variant=\"outlined\"  value={this.state.weight} onChange={(event)=>this.setweight(event)} />\r\n\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        <TextField error={(parseFloat(this.state.hours) < 0 || parseFloat(this.state.hours) > 6)?true:false}\r\n                        type=\"number\" label=\"Hours of Life (h)\" helperText=\"Please enter hours of life ≤ 6\" variant=\"outlined\"  value={this.state.hours} onChange={(event)=>this.sethours(event)} />\r\n                    </div>\r\n                </Grid>\r\n                <br/><br/>\r\n                <Button style={{marginLeft:\"50%\"}} variant=\"contained\" color=\"primary\" onClick={()=>{this.onNextBaseChars()}} disabled={this.allowBaseChars()}>Next {String.fromCharCode(62)}</Button>\r\n            </Grid>:null}\r\n\r\n            {this.state.counter===1?<Grid>\r\n                <Grid container direction=\"row\" style={{paddingLeft:\"0.7%\",}}> \r\n                        <h2>Acidemia and Acute Perinatal Event Criteria</h2> \r\n                    </Grid>\r\n                    <Grid container direction=\"column\" style={{paddingLeft:\"2%\"}}> \r\n                    <br/>\r\n                    {this.state.location==='1'?<div value={this.state.RB} onChange={(event)=>this.setRB(event)}> \r\n                        {this.state.location==='1'?<FormLabel component=\"legend\" style={{color:\"black\",fontWeight:\"bold\"}}>Select any one</FormLabel>:<FormLabel component=\"legend\" style={{color:\"black\",fontWeight:\"bold\"}}>Check any that apply</FormLabel>}\r\n                            <RadioGroup aria-label=\"RB\" name=\"RB\" defaultValue={this.state.RB}>\r\n                                <FormControlLabel value='0' control={<Radio color=\"primary\"/>} label=\"Cord OR infant blood gas ≤ 1hr of life, (7 ≤ pH ≤ 7.15) OR (-16 ≤ BE ≤ -10) OR No Blood gas available.\" />\r\n                                <FormControlLabel value='1' control={<Radio color=\"primary\"/>} label=\"Cord OR infant blood gas ≤ 1hr of life, pH ≤ 7 OR BE ≤ -16\"/>\r\n                            </RadioGroup>\r\n                            <br/>\r\n                    </div>:null}                       \r\n                    {this.state.location==='1'?(this.state.RB==='1'?(this.state.isCB1=false, this.state.isCB2=true):(this.state.isCB1=true, this.state.isCB2=false)):(this.state.isCB2=false)}\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel component=\"legend\"><b style={{color:\"black\"}}>Check any that apply</b></FormLabel>\r\n                        <FormGroup>\r\n                        {this.state.location==='0'?\r\n                        <FormControlLabel\r\n                            control={<Checkbox color=\"primary\" checked={this.state.isCB1} onChange={this.onChangeCB1}/>}\r\n                            label=\"Cord OR infant blood gas ≤ 1hr of life, (7 ≤ pH ≤ 7.15) OR (-16 ≤ BE ≤ -10) OR No Blood gas available.\"\r\n                        />:null}\r\n        \r\n                        <FormControlLabel \r\n                            control={<Checkbox color=\"primary\" checked={this.state.isCB3} onChange={this.onChangeCB3} />}\r\n                            label=\"Apgar < 5 @ 10 min\"\r\n                        />\r\n                        <FormControlLabel \r\n                            control={<Checkbox color=\"primary\" checked={this.state.isCB4} onChange={this.onChangeCB4} />}\r\n                            label=\"Assisted Ventilation for > 10 min\"\r\n                        />\r\n                        <FormControlLabel \r\n                            control={<Checkbox color=\"primary\" checked={this.state.isCB5} onChange={this.onChangeCB5} />}\r\n                            label=\"History of acute perinatal event*\"\r\n                        />\r\n                        </FormGroup>\r\n                    </FormControl>\r\n                    </Grid> \r\n                    <br/><br/><br/><br/><br/>\r\n                    <Grid container direction=\"row\" style={{paddingLeft:\"0.5%\"}}> \r\n                        <h5><b>*Acute perinatal event: late/variable decels, cordprolapse, uterine/code rupture, \r\n                        abruptio placenta, maternal hemorrhage, maternal cardiorespiratory arrest</b></h5>\r\n                    </Grid>\r\n                    <ul></ul>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={()=>{this.onPrevAcute()}}>{String.fromCharCode(60)} Previous</Button> \r\n                    <Button style={{marginLeft:\"45%\"}} variant=\"contained\" color=\"primary\" onClick={()=>{this.onNextAcute()}}>Next {String.fromCharCode(62)}</Button>\r\n            </Grid>:null}\r\n\r\n            {this.state.counter===2?<Grid>\r\n                <Grid container direction=\"column\" style={{paddingLeft:\"0.5%\",}}> \r\n                    <h2 style={{marginLeft:\"3%\"}}>Determining Severe or Moderate Encephalopathy or Seizures</h2>\r\n                    <br/>\r\n                    <h2 style={{marginLeft:\"3%\"}}>Recommendations:</h2>\r\n                    <Paper style={{marginLeft:\"3%\",width:\"40%\",outlineColor:\"black\",outlineWidth:\"40px\"}}>\r\n                        {!this.state.results.Recommendation?<CircularProgress style={{marginLeft:\"40%\",marginTop:\"5%\",marginBottom:\"5%\"}}/>:<h3 style={{marginLeft:\"4%\"}}>{recommendations}</h3>}\r\n                    </Paper>\r\n                </Grid>\r\n                <br/><br/>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={()=>{this.onPrevResults()}}>{String.fromCharCode(60)} Previous</Button>\r\n            </Grid>:null}\r\n\r\n            </Paper>\r\n        );\r\n    }\r\n \r\n}\r\nexport default HypothermiaCalc;","E:\\spikewell\\Cerner Projects\\kgridui\\src\\Hypothermia\\SarnatForm.js",[],"E:\\spikewell\\Cerner Projects\\kgridui\\src\\Sepsis\\SepsisCalc.js",[],"E:\\spikewell\\Cerner Projects\\kgridui\\src\\Feeding\\FeedingCalc.js",[],"E:\\spikewell\\Cerner Projects\\kgridui\\src\\Feeding\\FeedingNew.js",["98","99","100","101","102","103","104","105"],"E:\\spikewell\\Cerner Projects\\kgridui\\src\\CSCE\\CSCECalc.js",["106","107","108","109","110","111","112","113","114"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Paper, Grid } from '@material-ui/core';\r\nimport { Row, Col } from 'react-flexbox-grid';\r\nimport { DateTimePicker } from 'react-widgets';\r\nimport Moment from 'moment'\r\nimport momentLocalizer from 'react-widgets-moment';\r\nimport { Tabs, TabList, Tab } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport CallApiEvent from './CallAPIEvent';\r\nimport CallApiDischarge from './CallAPIDischarge';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\n\r\nclass CSCECalc extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n            this.state = {activeIndex:0,\r\n                    heart_rate: '',\r\n                    breathing_interruption: '',\r\n                    spo2: '',\r\n                    cyanotic: '',\r\n                    date_of_event: new Date(),\r\n                    isAsleep: false,\r\n                    isLying: false,\r\n                    isStimulated: false,\r\n                    isCoughing: false,\r\n                    isFeeding: false,\r\n                    isChoking:false,\r\n                    results:{},\r\n                    date1: new Date(),\r\n                    date2: new Date(),\r\n                    date3: new Date(),\r\n                    date4: new Date(),\r\n                    date5: new Date(),\r\n                    bspo2:'',\r\n                    heart_rate1:'',\r\n                    results1:'',\r\n                    clicked:false\r\n                    }\r\n        this.getResults=this.getResults.bind(this)\r\n        this.getResults1=this.getResults1.bind(this)\r\n    }\r\n\r\n    handleActiveIndexUpdate = (activeIndex) => this.setState({activeIndex,clicked:false});\r\n\r\n    set_heart_rate(event) {\r\n        this.setState({\r\n          heart_rate: event.target.value\r\n        })\r\n    }\r\n    set_breathing(event) {\r\n        this.setState({\r\n          breathing_interruption: event.target.value\r\n        })\r\n    }\r\n    set_spo2(event) {\r\n        this.setState({\r\n          spo2: event.target.value\r\n        })\r\n    }\r\n    set_cyanotic(event) {\r\n        this.setState({\r\n          cyanotic: event.target.value\r\n        })\r\n    }\r\n    set_date(event) {\r\n        this.setState({\r\n          date_of_event: event,\r\n          flag:1\r\n        })\r\n        let formatted_date = this.state.date_of_event.getDate() + \"-\" + (this.state.date_of_event.getMonth() + 1) + \"-\" + this.state.date_of_event.getFullYear()\r\n     \r\n    }\r\n    onChange_asleep = () => {\r\n        this.setState(initialState => ({\r\n          isAsleep: !initialState.isAsleep,\r\n          isChoking:false,\r\n          isCoughing:false,\r\n          isFeeding:false,\r\n          isLying:false,\r\n          isStimulated:false\r\n        }));\r\n    }\r\n    onChange_lying  = () => {\r\n        this.setState(initialState => ({\r\n          isLying: !initialState.isLying,\r\n          isAsleep: false,\r\n          isChoking:false,\r\n          isCoughing:false,\r\n          isFeeding:false,\r\n          isStimulated:false\r\n        }));\r\n    }\r\n    onChange_stimulated = () => {\r\n        this.setState(initialState => ({\r\n          isStimulated: !initialState.isStimulated,\r\n          isAsleep: false,\r\n          isChoking:false,\r\n          isCoughing:false,\r\n          isFeeding:false,\r\n          isLying:false,\r\n        }));\r\n    }\r\n    onChange_coughing = () => {\r\n        this.setState(initialState => ({\r\n          isCoughing: !initialState.isCoughing,\r\n          isAsleep: false,\r\n          isChoking:false,\r\n          \r\n          isFeeding:false,\r\n          isLying:false,\r\n          isStimulated:false\r\n        }));\r\n    }\r\n\r\n    onChange_feeding = () => {\r\n        this.setState(initialState => ({\r\n          isFeeding: !initialState.isFeeding,\r\n          isAsleep:false,\r\n          isChoking:false,\r\n          isCoughing:false,\r\n          \r\n          isLying:false,\r\n          isStimulated:false\r\n        }));\r\n    }\r\n    onChange_choking = () => {\r\n        this.setState(initialState => ({\r\n          isChoking: !initialState.isChoking,\r\n          isAsleep: false,\r\n          isCoughing:false,\r\n          isFeeding:false,\r\n          isLying:false,\r\n          isStimulated:false\r\n        }));\r\n    }\r\n\r\n    getResults(result){\r\n        this.setState({results:result})\r\n    }\r\n\r\n    onCalculateEvent()\r\n    {\r\n        CallApiEvent({ \"asleep\": this.state.isAsleep,\r\n                \"lying_down\": this.state.isLying,\r\n                \"stimulation\": this.state.isStimulated,\r\n                \"coughing\": this.state.isCoughing,\r\n                \"feeding\": this.state.isFeeding, \r\n                \"choking\": this.state.isChoking,\r\n                \"breathing_interrupt\": this.state.breathing_interruption,\r\n                \"heart_rate\": this.state.heart_rate,\r\n                \"desaturation\": this.state.spo2,\r\n                \"cyanotic\": this.state.cyanotic,\r\n                \"dateOevent\": this.state.date_of_event\r\n            },this.getResults)\r\n            this.setState({clicked:true})\r\n\r\n    }\r\n\r\n    allowEvent(){\r\n        return this.state.heart_rate===''||\r\n                parseFloat(this.state.heart_rate)<0||\r\n                this.state.breathing_interruption===''||\r\n                parseFloat(this.state.breathing_interruption)<0||\r\n                this.state.spo2===''||\r\n                parseFloat(this.state.spo2)<0||\r\n                this.state.cyanotic===''||\r\n                parseFloat(this.state.cyanotic)<0||\r\n                (this.state.isAsleep===false&&\r\n                this.state.isLying===false&&\r\n                this.state.isStimulated===false&&\r\n                this.state.isCoughing===false&&\r\n                this.state.isFeeding===false&&\r\n                this.state.isChoking===false)||\r\n                (this.state.date_of_event===''||\r\n                this.state.date_of_event===null)\r\n    }\r\n\r\n    set_date1(event) {\r\n        this.setState({\r\n            date1: event,\r\n            flag: 1\r\n          })\r\n          let formatted_date = this.state.date1.getDate() + \"-\" + (this.state.date1.getMonth() + 1) + \"-\" + this.state.date1.getFullYear()\r\n      }\r\n    set_date2(event) {\r\n        this.setState({\r\n          date2: event,\r\n          flag: 1\r\n        })\r\n        let formatted_date = this.state.date2.getDate() + \"-\" + (this.state.date2.getMonth() + 1) + \"-\" + this.state.date2.getFullYear()\r\n     }\r\n    set_date3(event) {\r\n        this.setState({\r\n          date3: event,\r\n          flag: 1\r\n        })\r\n        let formatted_date = this.state.date3.getDate() + \"-\" + (this.state.date3.getMonth() + 1) + \"-\" + this.state.date3.getFullYear()\r\n     \r\n    }\r\n    set_date4(event) {\r\n        this.setState({\r\n          date4: event,\r\n          flag: 1\r\n        })\r\n        let formatted_date = this.state.date4.getDate() + \"-\" + (this.state.date4.getMonth() + 1) + \"-\" + this.state.date4.getFullYear()\r\n     \r\n    }\r\n    set_date5(event) {\r\n        this.setState({\r\n          date5: event,\r\n          flag:1\r\n        })\r\n        let formatted_date = this.state.date5.getDate() + \"-\" + (this.state.date5.getMonth() + 1) + \"-\" + this.state.date5.getFullYear()\r\n     \r\n    }\r\n    set_bspo2(event) {\r\n        this.setState({\r\n          bspo2: event.target.value\r\n        })\r\n    }\r\n    set_heart_rate1(event) {\r\n        this.setState({\r\n          heart_rate1: event.target.value\r\n        })\r\n    }\r\n\r\n    getResults1(result){\r\n        this.setState({results1:result})\r\n    }\r\n\r\n    onCalculateDischarge()\r\n    {\r\n        CallApiDischarge({\"last_stimulate\": this.state.date1,\r\n            \"last_caffeine\": this.state.date2,\r\n            \"last_apnea\": this.state.date3,\r\n            \"last_bradycardia\": this.state.date4,\r\n            \"last_desat\": this.state.date5,\r\n            \"desaturation\": this.state.bspo2,     \r\n            \"heart_rate\": this.state.heart_rate1\r\n            },this.getResults1);\r\n        this.setState({clicked:true})\r\n    }\r\n    allowDischarge(){\r\n        return parseFloat(this.state.heart_rate1) < 0||\r\n            this.state.heart_rate1===''||\r\n            parseFloat(this.state.bspo2) < 0||\r\n            this.state.bspo2===''||\r\n            (this.state.date1===''||\r\n            this.state.date1===null)||\r\n            (this.state.date2===''||\r\n            this.state.date2===null)||\r\n            (this.state.date3===''||\r\n            this.state.date3===null)||\r\n            (this.state.date4===''||\r\n            this.state.date4===null)||\r\n            (this.state.date5===''||\r\n            this.state.date5===null)\r\n    }\r\n \r\n\r\n    render() {\r\n            let recommendations=''\r\n            if(this.state.results.Recommendation)\r\n            {\r\n                let out1 = this.state.results.Recommendation.split(\"\\n\");\r\n                recommendations = out1.map(item=><div style={{border:\"solid black 2px\", height:\"25%\", fontSize:\"150%\", width:\"auto\", paddingTop:\"3%\", paddingLeft:\"7%\", paddingBottom:\"3%\", marginBottom:\"4%\",boxSizing:\"border-box\"}}><i class=\"material-icons\">&#xe000;</i>&nbsp;&nbsp;{item}</div>);\r\n                if(this.state.results.Recommendation === \"The Events are not significant\\nNormal\")\r\n                {\r\n                    recommendations = out1.map(item=><div style={{border:\"solid black 2px\", height:\"25%\", fontSize:\"150%\", width:\"auto\", paddingTop:\"3%\", paddingLeft:\"7%\", paddingBottom:\"3%\", marginBottom:\"4%\"}}><i class=\"material-icons\">&#xe86c;</i>&nbsp;&nbsp;{item}</div>);\r\n                }\r\n            }\r\n            Moment.locale('en');\r\n            momentLocalizer();\r\n        return (\r\n            <Paper elevation={3} style={{padding:\"10px\",marginRight:\"0.5%\",marginLeft:\"0.5%\"}}>\r\n            <label><h1>Clinically Significant Cardiopulmonary Events (CSCE)</h1></label>\r\n            <hr/>\r\n            <div> \r\n                <Tabs onSelect={this.handleActiveIndexUpdate}>\r\n                    <TabList>\r\n                        <Tab style={this.state.activeIndex===1?{backgroundColor:\"#e0e0e0\"}:null}>Event Classification</Tab>\r\n                        <Tab style={this.state.activeIndex===0?{backgroundColor:\"#e0e0e0\"}:null}>Discharge Planning</Tab>\r\n                    </TabList>\r\n                </Tabs>           \r\n            </div>\r\n            {this.state.activeIndex===0?<Grid>\r\n            <Row>\r\n            <Col xs={7}>\r\n            <br/>\r\n            <Grid container direction=\"row\" style={{paddingLeft:\"0.5%\"}}>\r\n                <Grid container direction=\"row\" style={{paddingLeft:\"2.5%\"}}> \r\n                <div style={{marginRight:\"1%\",marginBottom:\"1%\"}}>\r\n                    <TextField error={(parseFloat(this.state.heart_rate) < 0)?true:false}\r\n                    type=\"number\" label=\"Heart Rate (bpm)\" variant=\"outlined\"  value={this.state.heart_rate} onChange={(event)=>this.set_heart_rate(event)} />\r\n                </div>\r\n                {/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */}\r\n                <div style={{marginRight:\"1%\",marginBottom:\"1%\"}}>\r\n                    <TextField error={(parseFloat(this.state.breathing_interruption) < 0)?true:false}\r\n                    type=\"number\" label=\"Breathing Interruption (sec)\" variant=\"outlined\"  value={this.state.breathing_interruption} onChange={(event)=>this.set_breathing(event)} />\r\n                </div>\r\n                {/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;         */}\r\n                <div>\r\n                    <TextField error={(parseFloat(this.state.spo2) < 0)?true:false}\r\n                    type=\"number\" label=\"SpO2 %\" variant=\"outlined\"  value={this.state.spo2} onChange={(event)=>this.set_spo2(event)} />\r\n                </div></Grid>\r\n                \r\n                <Grid container direction=\"row\" style={{paddingLeft:\"2%\"}}>\r\n                <Col xs={6}>\r\n                <br/><br/><br/>\r\n                    <div>\r\n                        <TextField error={(parseFloat(this.state.cyanotic) < 0)?true:false} \r\n                        type=\"number\" label=\"Cyanotic Episode (sec)\" variant=\"outlined\"  value={this.state.cyanotic} onChange={(event)=>this.set_cyanotic(event)} />\r\n                    </div>\r\n                    <br/><br/><br/>\r\n                    <div>\r\n                            <DateTimePicker\r\n                        style = {{marginBottom:\"4%\"}}\r\n                        value={this.state.date_of_event}\r\n                        onChange={value => this.set_date(value)} \r\n                        time={false}\r\n                        format=\"MMM DD, YYYY\"\r\n                        defaultValue= {new Date()}\r\n                        max={new Date()}\r\n                        />\r\n                    </div>\r\n                </Col>\r\n                <Col xs={4}>\r\n                <br/><br/><br/>\r\n                    <div style={{paddingLeft:\"5%\", paddingTop:\"2%\"}}>\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel component=\"legend\" style={{width:\"100%\",color:\"black\",fontWeight:\"bold\"}}>During Event, Infant Was...</FormLabel>\r\n                        <FormGroup>\r\n                            <FormControlLabel\r\n                                control={<Checkbox color=\"primary\" checked={this.state.isAsleep} onChange={this.onChange_asleep} />}\r\n                                label=\"Asleep\"/>       \r\n                            <FormControlLabel \r\n                                control={<Checkbox color=\"primary\" checked={this.state.isLying} onChange={this.onChange_lying} />}\r\n                                label=\"Lying Down\"\r\n                            />\r\n                            <FormControlLabel \r\n                                control={<Checkbox color=\"primary\" checked={this.state.isStimulated} onChange={this.onChange_stimulated} />}\r\n                                label=\"Stimulated\"\r\n                            />\r\n                            <FormControlLabel \r\n                                control={<Checkbox color=\"primary\" checked={this.state.isCoughing} onChange={this.onChange_coughing}/>}\r\n                                label=\"Coughing\"\r\n                            />\r\n                            <FormControlLabel \r\n                                control={<Checkbox color=\"primary\" checked={this.state.isFeeding} onChange={this.onChange_feeding}/>}\r\n                                label=\"Feeding\"\r\n                            />\r\n                            <FormControlLabel \r\n                                control={<Checkbox color=\"primary\" checked={this.state.isChoking} onChange={this.onChange_choking}/>}\r\n                                label=\"Choking\"\r\n                            />\r\n                            \r\n                        </FormGroup>\r\n                    </FormControl>\r\n                    </div>\r\n                </Col>\r\n                </Grid>\r\n            </Grid>\r\n            </Col>\r\n            {this.state.clicked && !this.state.results.Recommendation?\r\n            <div style={{marginTop:\"10%\"}}>\r\n            <CircularProgress/>\r\n            </div>\r\n            :null}\r\n            {this.state.results.Recommendation?<Col xs={4}>\r\n                \r\n                <Grid style={{marginTop:\"5%\" ,borderLeft:\"1px solid black\"}}>\r\n                    <br/> \r\n                    {/* <Paper style={{margin:\"2px\",width:\"100%\", marginLeft:\"5%\", marginTop:\"5%\"}}> */}\r\n                        <div style={{alignItems:\"center\",justifyContent:\"left\", marginLeft:\"5%\"}}>\r\n                            <Grid style={{marginLeft:\"5%\"}}>{recommendations}</Grid>\r\n                        </div>\r\n                    {/* </Paper> */}\r\n                    <br/><br/>     \r\n                </Grid>\r\n            </Col>:null}            \r\n            </Row>\r\n            <Button style={{marginLeft:\"2%\"}} variant=\"contained\" color=\"primary\" onClick={()=>{this.onCalculateEvent()}} disabled={this.allowEvent()}>Calculate</Button>\r\n            </Grid>:null}\r\n\r\n            {this.state.activeIndex===1?<Grid>\r\n            <Row style={{marginLeft:\"2%\"}}>\r\n            <Col xs={5}>\r\n            <br/>\r\n            <Row>\r\n                <Col xs = {5}>\r\n                <FormLabel style={{color:\"black\",fontWeight:\"bold\"}}><br/>Last CSCE Requiring Stimulation</FormLabel>\r\n                </Col>\r\n                <Col xs = {7}>\r\n                <DateTimePicker\r\n                  style = {{marginBottom:\"4%\"}}\r\n                  value={this.state.date1}\r\n                  onChange={value => this.set_date1(value)} \r\n                  time={false}\r\n                  format=\"MMM DD, YYYY\"\r\n                  defaultValue= {new Date()}\r\n                  max={new Date()}\r\n                />\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n            <Row> \r\n                <Col xs = {5}>   \r\n                <FormLabel style={{color:\"black\",fontWeight:\"bold\"}}><br/>Caffeine Discontinued</FormLabel>\r\n                </Col>\r\n                <Col xs = {7}>\r\n                <DateTimePicker\r\n                  style = {{marginBottom:\"4%\"}}\r\n                  value={this.state.date2}\r\n                  onChange={value => this.set_date2(value)} \r\n                  time={false}\r\n                  format=\"MMM DD, YYYY\"\r\n                  defaultValue= {new Date()}\r\n                  max={new Date()}\r\n                />\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n            <Row>\r\n                <Col xs = {5}>    \r\n                <FormLabel style={{marginBottom:\"4%\",color:\"black\",fontWeight:\"bold\"}}><br/>Last Self-Resolving Apnea</FormLabel>\r\n                </Col>\r\n                <Col xs = {7}>\r\n                <DateTimePicker\r\n                  style = {{marginBottom:\"4%\"}}\r\n                  value={this.state.date3}\r\n                  onChange={value => this.set_date3(value)} \r\n                  time={false}\r\n                  format=\"MMM DD, YYYY\"\r\n                  defaultValue= {new Date()}\r\n                  max={new Date()}\r\n                />\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n            <Row>        \r\n                <Col xs = {5}>\r\n                <FormLabel style={{color:\"black\",fontWeight:\"bold\"}}><br/>Last Self-Resolving Bradycardia</FormLabel>\r\n                </Col>\r\n                <Col xs = {7}>\r\n                <DateTimePicker\r\n                  style = {{marginBottom:\"4%\"}}\r\n                  value={this.state.date4}\r\n                  onChange={value => this.set_date4(value)} \r\n                  time={false}\r\n                  format=\"MMM DD, YYYY\"\r\n                  defaultValue= {new Date()}\r\n                  max={new Date()}\r\n                />\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n            <Row>\r\n                <Col xs = {5}>    \r\n                <FormLabel style={{color:\"black\",fontWeight:\"bold\"}}><br/>Last Self-Resolving Desaturation</FormLabel>\r\n                </Col>\r\n                <Col xs = {7}>\r\n                <DateTimePicker\r\n                  style = {{marginBottom:\"4%\"}}\r\n                  value={this.state.date5}\r\n                  onChange={value => this.set_date5(value)} \r\n                  time={false}\r\n                  format=\"MMM DD, YYYY\"\r\n                  defaultValue= {new Date()}\r\n                  max={new Date()}\r\n                />\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n            <Row>\r\n                <Col xs = {5}>    \r\n                <FormLabel style={{color:\"black\",fontWeight:\"bold\"}}><br/>Baseline SpO2</FormLabel>\r\n                </Col>\r\n                <Col xs = {7}>\r\n                <TextField error={(parseFloat(this.state.bspo2) < 0)?true:false}\r\n                type=\"number\" label=\"Baseline SpO2 in %\" variant=\"outlined\"  value={this.state.bspo2} onChange={(event)=>this.set_bspo2(event)} />\r\n                </Col>\r\n            </Row> \r\n            <br/>               \r\n            <Row>\r\n                <Col xs = {5}>\r\n                <FormLabel style={{marginBottom:\"7%\",color:\"black\",fontWeight:\"bold\"}}><br/>Heart Rate</FormLabel>\r\n                </Col>\r\n                <Col xs = {7}>\r\n                <TextField error={(parseFloat(this.state.heart_rate1) < 0)?true:false}\r\n                type=\"number\" label=\"Heart Rate in bpm\" variant=\"outlined\"  value={this.state.heart_rate1} onChange={(event)=>this.set_heart_rate1(event)} />\r\n                </Col>\r\n            </Row>\r\n            </Col>\r\n                {this.state.clicked && !this.state.results1?\r\n                <div style={{marginLeft:'15%',marginTop:\"10%\"}}>\r\n                <CircularProgress/>\r\n                </div>\r\n                :null}\r\n                {this.state.results1!==''?<Col xs={6}>\r\n                <Grid>   \r\n                            <Paper elevation={5} style={{marginLeft:\"20%\",marginTop:\"20px\",width:\"80%\"}} variant=\"outlined\">\r\n                                    {this.state.results1.startsWith(\"OK\")?<Grid container style={{alignItems:\"center\",justifyContent:\"center\"}}><CheckCircleOutlineIcon/><h2>&nbsp;&nbsp;{this.state.results1}</h2></Grid>:<Grid container style={{alignItems:\"center\",justifyContent:\"center\"}}><ErrorOutlineIcon/><h2>&nbsp;&nbsp;{this.state.results1}</h2></Grid>}\r\n                            </Paper>\r\n                            <Grid style={{marginLeft:\"20%\"}}>\r\n                                <h3><br/>Other Considerations:<br/></h3>\r\n                                <span>&#10146; Events related to ROP, immunization etc. are not counted towards CSCE-free days.<br/>\r\n                                &#10146; Feeding-associated events or chocking episodes requiring stimulation are different issue.<br/>\r\n                                &#10146; Self-resolved and feeding associated events not requiring stimulation are physiologic and not considered CSCE.<br/>\r\n                                &#10146;Pulse oximeter monitoring until discharge.</span>\r\n                                <br/><br/>\r\n                                <h3>Document:<br/></h3>\r\n                                <span>&#10146;HR of 80-100, even if not bradycardia on its own.<br/>\r\n                                &#10146;Self-resolved apneic events &gt; 20 sec.<br/>\r\n                                &#10146;Apneic events associated with HR &#60; 80 and/or SpO2 &#60; 90%.<br/>\r\n                                &#10146;Apnea, bradycardia or desaturations requiring stimulation.<br/>\r\n                                <br/>\r\n                                No need to document:<br/>\r\n                                &#10146;&nbsp;&#60; 4 seconds of O2 desaturation without color change.<br/>\r\n                                <br/>\r\n                                May need to document:<br/>\r\n                                &#10146;&nbsp;O2 desaturations 90-94%, if &gt; 2 episodes per shift.</span>\r\n                            </Grid>    \r\n                </Grid>\r\n                </Col>:null}\r\n\r\n            </Row>\r\n            <br/>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={()=>{this.onCalculateDischarge()}} disabled={this.allowDischarge()}>Calculate</Button>\r\n            </Grid>:null}\r\n            \r\n            </Paper>\r\n        );\r\n    }\r\n}\r\nexport default CSCECalc;\r\n            \r\n","E:\\spikewell\\Cerner Projects\\kgridui\\src\\Layouts\\DefaultLayout.js",["115","116","117","118"],"import React,{Component}from 'react'\r\nimport SideBar from './SideBar'\r\nimport './Layout.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport logo from './logo.png';\r\nimport Menu from '@material-ui/icons/Menu';\r\nimport Backdrop from './Backdrop';\r\nimport { Row, Col } from 'react-flexbox-grid';\r\nimport {Form} from 'react-bootstrap';\r\nimport { Paper, Grid } from '@material-ui/core';\r\nclass DefaultLayout extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state={\r\n            toggle:false,\r\n            mrn: 123456789,\r\n            name: \"First Last\"\r\n        }\r\n    this.toggleSidebar=this.toggleSidebar.bind(this)\r\n    this.handleclose=this.handleclose.bind(this)\r\n    }\r\n    toggleSidebar()\r\n    {\r\n        this.setState((prevState)=>{\r\n            return {toggle:!prevState.toggle}\r\n        }\r\n        )\r\n    }\r\n    set_mrn(event) {\r\n        this.setState({\r\n            mrn: event.target.value\r\n          })\r\n      }\r\n  \r\n    set_name(event) {\r\n        this.setState({\r\n            name: event.target.value\r\n          })\r\n      }\r\n  \r\n    handleclose(){\r\n        this.setState({toggle:false})\r\n    }\r\n    render() { \r\n        return ( \r\n        <div className=\"parent\"> \r\n            <div className=\"custom-header\" >\r\n                <Col lg={12}>\r\n                <Row style={{marginBottom:\"1%\"}}>\r\n                <div style={{marginLeft:\"2%\"}}><img src={logo} alt=\"chla logo\"/></div>\r\n                <div className=\"a_cont\"><a href=\"/\" >Neonatal Clinical Decision Support</a></div></Row>\r\n                <Row style={{borderTop:\"solid #1B93CA 2px\", backgroundColor:\"#004F87\"}}>\r\n                    <Col lg = {8} style={{marginTop:\"0.2%\"}}>\r\n                <SideBar class=\"sidebar\" display={this.state.toggle} click={this.handleclose}/>\r\n                </Col>\r\n                <Col lg = {4}>\r\n                    <Form inline style={{paddingTop:\"1.3%\"}}>\r\n                <Form.Label inline style={{paddingTop:\"0.5%\",paddingRight:\"1%\"}}>MRN:</Form.Label>\r\n                <Form.Control \r\n                inline\r\n                  style = {{width:\"30%\"}}\r\n                  required\r\n                  type=\"number\"\r\n                  placeholder=\"MRN\"\r\n                  defaultValue=\"123456789\"\r\n                  value={this.state.mrn}\r\n                  onChange={(event)=>this.set_mrn(event)}\r\n                />\r\n                &nbsp;\r\n                &nbsp;\r\n                &nbsp;\r\n                <Form.Label inline style={{paddingTop:\"0.5%\",paddingRight:\"1%\"}}>Name:</Form.Label>\r\n                <Form.Control\r\n                inline\r\n                  style = {{width:\"30%\"}}\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                  defaultValue=\"First Last\"\r\n                  value={this.state.name}\r\n                  onChange={(event)=>this.set_name(event)}\r\n                /></Form>\r\n              </Col>\r\n                </Row>\r\n                </Col>      \r\n            </div>\r\n          \r\n          <Backdrop click={this.handleclose} display={this.state.toggle}/>\r\n          <div className='render-area'>\r\n              {this.props.children}\r\n            </div>\r\n          \r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default DefaultLayout;\r\n\r\n","E:\\spikewell\\Cerner Projects\\kgridui\\src\\Landingpage.jsx",[],"E:\\spikewell\\Cerner Projects\\kgridui\\src\\Hypothermia\\CallAPIBaseline.js",[],"E:\\spikewell\\Cerner Projects\\kgridui\\src\\Hypothermia\\CallApi.js",[],"E:\\spikewell\\Cerner Projects\\kgridui\\src\\Sepsis\\CallAPISepsis.js",[],"E:\\spikewell\\Cerner Projects\\kgridui\\src\\Feeding\\CallAPIFeeding.js",[],"E:\\spikewell\\Cerner Projects\\kgridui\\src\\Feeding\\CallAPIParenteral.js",[],"E:\\spikewell\\Cerner Projects\\kgridui\\src\\Feeding\\CallAPIFeedingAdv.js",[],"E:\\spikewell\\Cerner Projects\\kgridui\\src\\Layouts\\Backdrop.js",[],"E:\\spikewell\\Cerner Projects\\kgridui\\src\\Layouts\\SideBar.js",["119","120","121"],"import React from 'react';\r\nimport './SideBar.css'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\r\nimport { Row, Col } from 'react-flexbox-grid';\r\nimport { styled } from '@material-ui/core';\r\n\r\nexport default class SideBar extends React.Component{\r\n    // const button_style={width:\"100%\",color:\"white\",paddingTop:\"12px\",textAlign:'left'}\r\n    \r\n\r\n    render(){\r\n\r\nreturn(\r\n  <Col style={{backgroundColor:\"#004F87\", width:\"100%\"}}>\r\n    <Navbar style={{width:\"100%\"}}>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <NavLink activeStyle={{fontSize:\"22px\", color:\"white\", textDecoration:\"none\"}}\r\n            style={{marginLeft:\"5%\", fontSize:\"22px\", color:\"#77ACC1\", textDecoration:\"none\"}} to=\"/\" exact> Feeding  </NavLink>\r\n          <NavLink activeStyle={{fontSize:\"22px\", color:\"white\", textDecoration:\"none\"}}\r\n            style={{marginLeft:\"5%\", fontSize:\"22px\", color:\"#77ACC1\", textDecoration:\"none\"}} to=\"/Hypothermia/HypothermiaCalc\">Hypothermia  </NavLink>\r\n          <NavLink activeStyle={{fontSize:\"22px\", color:\"white\", textDecoration:\"none\"}}\r\n            style={{marginLeft:\"5%\", fontSize:\"22px\", color:\"#77ACC1\", textDecoration:\"none\"}} to=\"/Sepsis/SepsisCalc\">Sepsis  </NavLink>\r\n          <NavLink activeStyle={{fontSize:\"22px\", color:\"white\", textDecoration:\"none\"}}\r\n            style={{marginLeft:\"5%\", fontSize:\"22px\", color:\"#77ACC1\", textDecoration:\"none\"}} to=\"/CSCE/CSCECalc\">Cardiopulmonary  </NavLink>\r\n        </Nav>\r\n      </Navbar.Collapse>  \r\n    </Navbar>\r\n    </Col>\r\n)\r\n}\r\n}\r\n","E:\\spikewell\\Cerner Projects\\kgridui\\src\\CSCE\\CallAPIDischarge.js",[],"E:\\spikewell\\Cerner Projects\\kgridui\\src\\CSCE\\CallAPIEvent.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":206,"column":70,"nodeType":"128","endLine":206,"endColumn":80},{"ruleId":"126","severity":1,"message":"127","line":206,"column":94,"nodeType":"128","endLine":206,"endColumn":104},{"ruleId":"126","severity":1,"message":"127","line":206,"column":118,"nodeType":"128","endLine":206,"endColumn":128},{"ruleId":"126","severity":1,"message":"127","line":206,"column":141,"nodeType":"128","endLine":206,"endColumn":151},{"ruleId":"126","severity":1,"message":"127","line":206,"column":167,"nodeType":"128","endLine":206,"endColumn":177},{"ruleId":"129","severity":1,"message":"130","line":110,"column":13,"nodeType":"131","messageId":"132","endLine":110,"endColumn":27},{"ruleId":"133","severity":1,"message":"134","line":333,"column":27,"nodeType":"135","messageId":"136","endLine":336,"endColumn":10},{"ruleId":"133","severity":1,"message":"134","line":338,"column":33,"nodeType":"135","messageId":"136","endLine":341,"endColumn":10},{"ruleId":"137","severity":1,"message":"138","line":527,"column":15,"nodeType":"139","endLine":527,"endColumn":83},{"ruleId":"137","severity":1,"message":"138","line":528,"column":15,"nodeType":"139","endLine":528,"endColumn":83},{"ruleId":"137","severity":1,"message":"138","line":532,"column":15,"nodeType":"139","endLine":532,"endColumn":67},{"ruleId":"137","severity":1,"message":"138","line":536,"column":15,"nodeType":"139","endLine":536,"endColumn":42},{"ruleId":"137","severity":1,"message":"138","line":537,"column":15,"nodeType":"139","endLine":537,"endColumn":42},{"ruleId":"129","severity":1,"message":"140","line":11,"column":10,"nodeType":"131","messageId":"132","endLine":11,"endColumn":33},{"ruleId":"129","severity":1,"message":"141","line":12,"column":10,"nodeType":"131","messageId":"132","endLine":12,"endColumn":28},{"ruleId":"129","severity":1,"message":"142","line":13,"column":8,"nodeType":"131","messageId":"132","endLine":13,"endColumn":20},{"ruleId":"129","severity":1,"message":"130","line":83,"column":13,"nodeType":"131","messageId":"132","endLine":83,"endColumn":27},{"ruleId":"129","severity":1,"message":"130","line":196,"column":15,"nodeType":"131","messageId":"132","endLine":196,"endColumn":29},{"ruleId":"129","severity":1,"message":"130","line":203,"column":13,"nodeType":"131","messageId":"132","endLine":203,"endColumn":27},{"ruleId":"129","severity":1,"message":"130","line":210,"column":13,"nodeType":"131","messageId":"132","endLine":210,"endColumn":27},{"ruleId":"129","severity":1,"message":"130","line":218,"column":13,"nodeType":"131","messageId":"132","endLine":218,"endColumn":27},{"ruleId":"129","severity":1,"message":"130","line":226,"column":13,"nodeType":"131","messageId":"132","endLine":226,"endColumn":27},{"ruleId":"129","severity":1,"message":"143","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":14},{"ruleId":"129","severity":1,"message":"144","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":12},{"ruleId":"129","severity":1,"message":"145","line":10,"column":10,"nodeType":"131","messageId":"132","endLine":10,"endColumn":15},{"ruleId":"129","severity":1,"message":"146","line":10,"column":17,"nodeType":"131","messageId":"132","endLine":10,"endColumn":21},{"ruleId":"129","severity":1,"message":"147","line":4,"column":23,"nodeType":"131","messageId":"132","endLine":4,"endColumn":30},{"ruleId":"129","severity":1,"message":"148","line":5,"column":10,"nodeType":"131","messageId":"132","endLine":5,"endColumn":13},{"ruleId":"129","severity":1,"message":"149","line":6,"column":10,"nodeType":"131","messageId":"132","endLine":6,"endColumn":16},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unused-vars","'formatted_date' is assigned a value but never used.","Identifier","unusedVar","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MuiPickersUtilsProvider' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'DateFnsUtils' is defined but never used.","'Button' is defined but never used.","'Menu' is defined but never used.","'Paper' is defined but never used.","'Grid' is defined but never used.","'NavItem' is defined but never used.","'Row' is defined but never used.","'styled' is defined but never used.","no-global-assign","no-unsafe-negation"]